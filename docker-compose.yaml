version: "3.8"

services: 
  
  # fast api servicee
  

  app:
    container_name: api
    build:
      context: ./app
      dockerfile: Dockerfile
    command: uvicorn --port 8080 --host 0.0.0.0 main:app --reload
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - 8080:8080
    restart: always
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - network
    profiles:
      - api


  redis:
    container_name: redis
    image: redis:6.2.3
    command: redis-server --requirepass docker
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: always
    networks:
      - network
    profiles:
      - db
      - api

  db:
    container_name: postgres
    build:
        context: ./database
        dockerfile: Dockerfile
    command: postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=400
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: docker
    ports:
      - 5432:5432
    networks:
      - network
    volumes:
      - db:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - db
      - api

volumes:
  db:
    driver: local
  
# A local docker network.
networks:
  network:
    driver: bridge